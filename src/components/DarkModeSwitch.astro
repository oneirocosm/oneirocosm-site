
<button
  id="theme-toggle"
  type="button"
  class="text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-500 rounded-lg text-sm p-2.5"
>
  <svg
    id="theme-toggle-dark-icon"
    class="w-5 h-5 hidden"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
    ></path>
  </svg>
  <svg
    id="theme-toggle-light-icon"
    class="w-5 h-5 hidden"
    fill="currentColor"
    viewBox="0 0 20 20"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
      fill-rule="evenodd"
      clip-rule="evenodd"
    ></path>
  </svg>
</button>


<script>

class LightMode {
  constructor() {
    this.icon = document.getElementById('theme-toggle-light-icon');
  }

  onEntry() {
    document.documentElement.classList.remove('dark');
    localStorage.setItem('color-theme', 'light');
    this.icon.classList.remove('hidden');
  }

  onExit() {
    this.icon.classList.add('hidden');
  }

  next() {
    return themeStates.dark;
  }
}

class DarkMode {
  constructor() {
    this.icon = document.getElementById('theme-toggle-dark-icon');
  }
  
  onEntry() {
    document.documentElement.classList.add('dark');
    localStorage.setItem('color-theme', 'dark');
    this.icon.classList.remove('hidden');
  }

  onExit() {
    this.icon.classList.add('hidden');
  }

  next() {
    return themeStates.light;
  }
}

class StateMachine {
  constructor() {
    const themeLocalName = localStorage.getItem('color-theme');
    //console.log('here');

    if (themeLocalName) {
      const themeLocal = themeStates[themeLocalName];
      this.themeCurrent = themeLocal;
      themeLocal.onEntry();
    } else if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      themeStates.light.onExit();
      themeStates.dark.onEntry()
      this.themeCurrent = themeStates.dark;
      localStorage.setItem('color-theme', 'dark');
    } else {
      themeStates.dark.onExit();
      themeStates.light.onEntry();
      this.themeCurrent = themeStates.light;
      localStorage.setItem('color-theme', 'light');
    }

    this.toggleBtn = document.getElementById('theme-toggle');
    this.toggleBtn.addEventListener('click', () => this.update());
  }

  update() {
    const themeNext = this.themeCurrent.next();

    if (themeNext !== this.themeCurrent) {
      this.themeCurrent.onExit();
      this.themeCurrent = themeNext;
      this.themeCurrent.onEntry();
    }
  }
}

let themeStates = {
  'dark': new DarkMode(),
  'light': new LightMode(),
};

new StateMachine();
</script>
